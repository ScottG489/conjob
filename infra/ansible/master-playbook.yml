- hosts: all
  become: yes
  gather_facts: no
  force_handlers: True
  vars_files:
    - vars.yml
  pre_tasks:
    - name: Update apt
      raw: apt update && apt update

  tasks:
  # Necessary because we turn it off for python install pre_task
  - name: Gathering facts
    setup:

  - name: Resize filesystem if it has grown
    become: yes
    shell: |
      set -x
      BLOCK_DEVICE=$(lsblk -e 7 --tree=uuid | tail -2 | head -1 | awk '{print $1'})
      PARTITION_NAME=$(lsblk -e 7 --tree=uuid | tail -1 | awk '{print $1'})
      sudo growpart /dev/$BLOCK_DEVICE 1
      sudo resize2fs /dev/$PARTITION_NAME

  - name: Import the Docker signing key (apt-key)
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg

  - name: Install Docker apt repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable

  - name: Register kernel release version variable
    command: uname --kernel-release
    register: kernel_release_version

  - name: Install packages
    package:
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - linux-headers-{{ kernel_release_version.stdout }}

  - name: Download and install sysbox runtime
    apt:
      deb: https://downloads.nestybox.com/sysbox/releases/v0.4.1/sysbox-ce_0.4.1-0.ubuntu-focal_amd64.deb

  - name: Create temp file for config
    tempfile:
    register: config_temp_file

  - name: Copy config
    copy:
      src: config.yml
      dest: "{{ config_temp_file.path }}"
    notify:
      - "Delete temp config file"

  - name: Create temp file for keystore
    tempfile:
    register: keystore_temp_file

  - name: Copy keystore to temp file
    copy:
      src: keystore.p12
      dest: "{{ keystore_temp_file.path }}"
    notify:
      - "Delete temp keystore file"

  # TODO: We're going to do it this way because the ansible docker module was a pain to set up
  # TODO:   because it needs to be installed via pip (python2) which was a pain to install
  # TODO: I'm not sure why I need to manually pull here but it doesn't seem to pick up the latest
  # TODO:   change otherwise.
  - name: Run ConJob container
    become: yes
    # TODO: It isn't ideal that we silence output here because some could be useful to know. We should
    # TODO:   try using a docker env file (--env-file) instead.
    no_log: True
    shell: |
      docker rm --force {{ container_name }}
      docker pull {{ image_name }}
      docker create \
        -v /var/run/docker.sock:/var/run/docker.sock \
        --userns=host \
        -p 80:8080 \
        -p 8081:8081 \
        -p 443:8443 \
        -e DOCKER_USERNAME={{ dockerUsername }} \
        -e DOCKER_PASSWORD={{ dockerPassword }} \
        -e ADMIN_USERNAME={{ adminUsername }} \
        -e ADMIN_PASSWORD={{ adminPassword }} \
        -e KEYSTORE_PASSWORD={{ keystorePassword }} \
        --name {{ container_name }} {{ image_name }}
      docker cp {{ config_temp_file.path }} {{ container_name }}:/opt/app/config.yml
      docker cp {{ keystore_temp_file.path }} {{ container_name }}:/opt/keystore.p12
      docker start {{ container_name }}

  - name: Copy service file for conjob-start service
    copy:
      src: service/conjob-start.service
      dest: /etc/systemd/system/conjob-start.service

  - name: Enable conjob start service
    ansible.builtin.systemd:
      name: conjob-start
      state: started
      enabled: yes
      daemon_reload: yes

  - name: Wait for service to be healthy
    uri:
      url: "http://localhost:8081/healthcheck"
      url_username: "{{ adminUsername }}"
      url_password: "{{ adminPassword }}"
      status_code: 200
    register: result
    until: result.status == 200
    retries: 30
    delay: 1

  # TODO: Will use the above method to run the container until I can figure out how to install
  # TODO:   all of the dependencies that this ansible module needs
#  - name: Create a data container
#    docker_container:
#      name: conjob
#      image: scottg489/conjob

  handlers:
    - name: Delete temp config file
      file:
        path: "{{ config_temp_file.path }}"
        state: absent
    - name: Delete temp keystore file
      file:
        path: "{{ keystore_temp_file.path }}"
        state: absent
