sourceSets {
    unitTest {
        java.srcDirs = ['src/test/unit/java']
        resources.srcDir file('src/test/unit/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

ext.unitTestJqwikVersion = '1.5.1'

pitest {
    testSourceSets.set([sourceSets.unitTest])
    junit5PluginVersion = '0.12'
    timestampedReports = false
    // If you want to run all mutators: https://pitest.org/quickstart/mutators/
//    mutators = ["ALL"]
    // If you want to run specific tests (faster)
//    targetTests = ['*JobServiceTest']
}

task unitTest(type: Test) {
    testClassesDirs = sourceSets.unitTest.output.classesDirs
    classpath = sourceSets.unitTest.runtimeClasspath

    useJUnitPlatform()

    mustRunAfter build
}

dependencies {
    unitTestAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    unitTestCompileOnly 'org.projectlombok:lombok:1.18.10'

    unitTestImplementation "org.mockito:mockito-core:3.8.0"
    unitTestImplementation platform('org.junit:junit-bom:5.7.1')
    unitTestImplementation 'org.junit.jupiter:junit-jupiter'
    unitTestImplementation 'org.hamcrest:hamcrest:2.2'
    unitTestImplementation "net.jqwik:jqwik:${unitTestJqwikVersion}"
    unitTestImplementation 'com.tngtech.archunit:archunit:0.17.0'
    unitTestImplementation 'com.tngtech.archunit:archunit-junit5:0.17.0'
}

task jacocoUnitTestReport(type: JacocoReport) {
    dependsOn unitTest
    executionData unitTest
    sourceSets sourceSets.main
}

unitTest.finalizedBy jacocoUnitTestReport
